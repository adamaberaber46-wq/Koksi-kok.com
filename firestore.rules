rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows public read access to shipping rates.
     */
    match /shipping_rates/{rateId} {
      allow get: if true;
      allow list: if true;
    }

    /**
     * @description Allows public read access to product categories.
     */
    match /categories/{categoryId} {
      allow get: if true;
      allow list: if true;
    }

    /**
     * @description Allows public read access to product information.
     */
    match /products/{productId} {
      allow get: if true;
      allow list: if true;
    }

    /**
     * @description Enforces owner-only access to user profile data.
     */
    match /users/{userId} {
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow get: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
      allow list: if false;
    }

    /**
     * @description Enforces owner-only access to shopping cart items.
     */
    match /users/{userId}/shopping_cart_items/{cartItemId} {
      allow create: if isOwner(userId);
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Allows any authenticated user to read orders, only signed in users can create orders.
     * Only the creating user can modify the order
     */
    match /orders/{orderId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && get(/databases/$(database)/documents/orders/$(orderId)).data.userId == request.auth.uid;
    }

    /**
     * @description Enforces owner-only access to AI outfit suggestions.
     */
    match /users/{userId}/ai_outfit_suggestions/{suggestionId} {
      allow create: if isOwner(userId);
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Allows read access to site settings; restricts write access.
     */
    match /site_settings/{settingId} {
      allow get: if true;
      allow list: if true;
    }

    /**
     * @description Placeholder rule.  No access allowed.
     */
    match /{path=**}/_{privateCollection}/{privateDocument} {
       allow read, write: if false;
    }

    /**
     * @description Placeholder rule. No access allowed.
     */
    match /{path=**}/veryPrivateDocument {
       allow read, write: if false;
    }
  }

  /**
   * @description Checks if the request is made by an authenticated user.
   */
  function isSignedIn() {
    return request.auth != null;
  }

  /**
   * @description Checks if the authenticated user is the owner of the resource.
   */
  function isOwner(userId) {
    return isSignedIn() && request.auth.uid == userId;
  }
}